{"version":3,"file":"static/js/399.6a27bdec.chunk.js","mappings":"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","sources":["webpack://users-cards/./src/shared/ui/input/s.module.scss?6d30","shared/ui/input/index.tsx","webpack://users-cards/./src/shared/ui/textarea/s.module.scss?31b5","shared/ui/textarea/index.tsx","pages/profile/lib/index.ts","webpack://users-cards/./src/pages/profile/s.module.scss?aecc","pages/profile/index.tsx","webpack://users-cards/./src/shared/ui/button/s.module.scss?345b","shared/ui/button/index.tsx","webpack://users-cards/./src/shared/ui/page-title/s.module.scss?7ca1","shared/ui/page-title/index.tsx","webpack://users-cards/./src/widgets/sider/s.module.scss?4845","widgets/sider/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"s_inputContainer__p6PWd\",\"label\":\"s_label__aAvWf\",\"input\":\"s_input__bvg+N\",\"error\":\"s_error__uh9PX\",\"disabled\":\"s_disabled__CNoKT\"};","import classNames from \"classnames\";\r\nimport { FieldError, UseFormRegisterReturn } from \"react-hook-form\";\r\nimport s from \"./s.module.scss\";\r\n\r\ntype InputProps = {\r\n  label: string;\r\n  register: UseFormRegisterReturn;\r\n  isError?: FieldError;\r\n  disabled?: boolean;\r\n};\r\n\r\nconst Input: React.FC<InputProps> = ({\r\n  label,\r\n  register,\r\n  isError,\r\n  disabled,\r\n}) => {\r\n  return (\r\n    <label className={s.inputContainer}>\r\n      <div className={s.label}>{label}</div>\r\n      <input\r\n        {...register}\r\n        className={classNames(s.input, {\r\n          [s.error]: isError,\r\n          [s.disabled]: disabled,\r\n        })}\r\n        disabled={disabled}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"textAreaContainer\":\"s_textAreaContainer__R49Vy\",\"label\":\"s_label__3bnGX\",\"textArea\":\"s_textArea__wu5BZ\",\"error\":\"s_error__NrQ6I\",\"disabled\":\"s_disabled__haQfG\"};","import classNames from \"classnames\";\r\nimport { FieldError, UseFormRegisterReturn } from \"react-hook-form\";\r\nimport s from \"./s.module.scss\";\r\n\r\ntype TextAreaProps = {\r\n  label: string;\r\n  register: UseFormRegisterReturn;\r\n  isError?: FieldError;\r\n  disabled?: boolean;\r\n  height?: string;\r\n};\r\n\r\nconst TextArea: React.FC<TextAreaProps> = ({\r\n  label,\r\n  register,\r\n  isError,\r\n  disabled,\r\n  height,\r\n}) => {\r\n  return (\r\n    <label className={s.textAreaContainer}>\r\n      <div className={s.label}>{label}</div>\r\n      <textarea\r\n        {...register}\r\n        className={classNames(s.textArea, {\r\n          [s.error]: isError,\r\n          [s.disabled]: disabled,\r\n        })}\r\n        disabled={disabled}\r\n        style={{ height }}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default TextArea;\r\n","import { ProfileForm, User } from \"./../../../shared/types/index\";\r\n\r\nexport const findUserById = (users: Array<User>, id: number) =>\r\n  users.find((user) => user.id === id) as User;\r\n\r\nexport const formFields: Array<{\r\n  name: keyof ProfileForm;\r\n  rules?: {\r\n    required?: boolean;\r\n    maxLength?: number;\r\n  };\r\n  label: string;\r\n}> = [\r\n  {\r\n    name: \"name\",\r\n    rules: {\r\n      required: true,\r\n      maxLength: 50,\r\n    },\r\n    label: \"Name\",\r\n  },\r\n  {\r\n    name: \"username\",\r\n    rules: {\r\n      required: true,\r\n      maxLength: 30,\r\n    },\r\n    label: \"User name\",\r\n  },\r\n  {\r\n    name: \"email\",\r\n    rules: {\r\n      required: true,\r\n    },\r\n    label: \"E-mail\",\r\n  },\r\n  {\r\n    name: \"street\",\r\n    rules: {\r\n      required: true,\r\n    },\r\n    label: \"Street\",\r\n  },\r\n  {\r\n    name: \"city\",\r\n    rules: {\r\n      required: true,\r\n    },\r\n    label: \"City\",\r\n  },\r\n  {\r\n    name: \"zipcode\",\r\n    rules: {\r\n      required: true,\r\n      maxLength: 30,\r\n    },\r\n    label: \"Zip-code\",\r\n  },\r\n  {\r\n    name: \"phone\",\r\n    rules: {\r\n      required: true,\r\n      maxLength: 50,\r\n    },\r\n    label: \"Phone\",\r\n  },\r\n  {\r\n    name: \"website\",\r\n    rules: {\r\n      required: true,\r\n    },\r\n    label: \"Website\",\r\n  },\r\n];\r\n","// extracted by mini-css-extract-plugin\nexport default {\"pageWrapper\":\"s_pageWrapper__pEZpi\",\"main\":\"s_main__rkUMg\",\"header\":\"s_header__rX9az\",\"titleWrapper\":\"s_titleWrapper__SV1Wl\",\"form\":\"s_form__o11+1\",\"inputs\":\"s_inputs__ak-eQ\",\"inputWrapper\":\"s_inputWrapper__HSo9u\",\"submitWrapper\":\"s_submitWrapper__XAo9E\"};","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ProfileForm, User } from \"../../shared/types\";\r\nimport Button from \"../../shared/ui/button\";\r\nimport Input from \"../../shared/ui/input\";\r\nimport PageTitle from \"../../shared/ui/page-title\";\r\nimport TextArea from \"../../shared/ui/textarea\";\r\nimport Sider from \"../../widgets/sider\";\r\nimport { useAppDispatch, useAppSelector } from \"../users/lib\";\r\nimport { getUsers, selectUsers } from \"../../entities/user/model/redux-slice\";\r\nimport { findUserById, formFields } from \"./lib\";\r\nimport s from \"./s.module.scss\";\r\n\r\nconst ProfilePage = () => {\r\n  const dispatch = useAppDispatch();\r\n  const users = useAppSelector(selectUsers);\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const params = useParams();\r\n\r\n  const [isEditable, setIsEditable] = useState(false);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm<ProfileForm>();\r\n\r\n  useEffect(() => {\r\n    if (!users) {\r\n      dispatch(getUsers());\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    if (users) {\r\n      setUser(findUserById(users, parseInt(params.userId as string)));\r\n    }\r\n  }, [users]);\r\n  useEffect(() => {\r\n    reset({\r\n      name: user?.name,\r\n      username: user?.userName,\r\n      email: user?.email,\r\n      street: user?.street,\r\n      city: user?.city,\r\n      zipcode: user?.zipCode,\r\n      phone: user?.phone,\r\n      website: user?.website,\r\n    });\r\n  }, [user]);\r\n\r\n  const onEditClick = () => {\r\n    setIsEditable(true);\r\n  };\r\n  const onSubmit = (data: ProfileForm) => console.log(data);\r\n\r\n  return (\r\n    <div className={s.pageWrapper}>\r\n      <Sider />\r\n      <main className={s.main}>\r\n        <div className={s.header}>\r\n          <div className={s.titleWrapper}>\r\n            <PageTitle>Профиль пользователя</PageTitle>\r\n          </div>\r\n          <Button onClick={onEditClick}>Редактировать</Button>\r\n        </div>\r\n        <form className={s.form} onSubmit={handleSubmit(onSubmit)}>\r\n          <div className={s.inputs}>\r\n            {formFields.map((field) => (\r\n              <div className={s.inputWrapper} key={field.name}>\r\n                <Input\r\n                  register={register(field.name, field.rules)}\r\n                  label={field.label}\r\n                  isError={errors[field.name]}\r\n                  disabled={!isEditable}\r\n                />\r\n              </div>\r\n            ))}\r\n            <div className={s.inputWrapper}>\r\n              <TextArea\r\n                label=\"Comment\"\r\n                register={register(\"comment\")}\r\n                isError={errors.comment}\r\n                disabled={!isEditable}\r\n                height=\"55px\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={s.submitWrapper}>\r\n            <Button green>Отправить</Button>\r\n          </div>\r\n        </form>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"s_button__uZpn+\",\"green\":\"s_green__19pDq\"};","import classNames from \"classnames\";\r\nimport { ReactNode } from \"react\";\r\nimport s from \"./s.module.scss\";\r\n\r\ntype ButtonProps = {\r\n  children: ReactNode;\r\n  onClick?: () => void;\r\n  green?: boolean;\r\n};\r\n\r\nconst Button: React.FC<ButtonProps> = ({ children, onClick, green }) => {\r\n  return (\r\n    <button\r\n      className={classNames(s.button, {\r\n        [s.green]: green,\r\n      })}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"s_title__D-Z-W\"};","import { ReactNode } from \"react\";\r\nimport s from \"./s.module.scss\";\r\n\r\ntype PageTitleProps = {\r\n  children: ReactNode;\r\n};\r\n\r\nconst PageTitle: React.FC<PageTitleProps> = ({ children }) => {\r\n  return (\r\n    <h2 className={s.title}>{children}</h2>\r\n  );\r\n};\r\n\r\nexport default PageTitle;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"sider\":\"s_sider__I7gR0\",\"title\":\"s_title__n7z+5\",\"buttonWrapper\":\"s_buttonWrapper__0LU5e\"};","import { useSearchParams } from \"react-router-dom\";\r\nimport { FilterValue } from \"../../shared/types\";\r\nimport Button from \"../../shared/ui/button\";\r\nimport s from \"./s.module.scss\";\r\n\r\ntype SiderProps = {\r\n  withFilters?: boolean;\r\n};\r\n\r\nconst Sider: React.FC<SiderProps> = ({ withFilters }) => {\r\n  const [, setSearchParams] = useSearchParams();\r\n\r\n  const onFilterClick = (filterValue: FilterValue) => () => {\r\n    setSearchParams({ filter: filterValue });\r\n  };\r\n\r\n  return (\r\n    <aside className={s.sider}>\r\n      {withFilters && (\r\n        <div className={s.filters}>\r\n          <h2 className={s.title}>Сортировка</h2>\r\n          <div className={s.buttonWrapper}>\r\n            <Button onClick={onFilterClick(\"city\")}>по городу</Button>\r\n          </div>\r\n          <div className={s.buttonWrapper}>\r\n            <Button onClick={onFilterClick(\"companyName\")}>по компании</Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sider;\r\n"],"names":["label","register","isError","disabled","className","s","classNames","height","style","formFields","name","rules","required","maxLength","dispatch","useAppDispatch","users","useAppSelector","selectUsers","useState","user","setUser","params","useParams","isEditable","setIsEditable","useForm","handleSubmit","errors","formState","reset","useEffect","getUsers","id","find","findUserById","parseInt","userId","username","userName","email","street","city","zipcode","zipCode","phone","website","onClick","onSubmit","data","console","log","map","field","comment","green","children","withFilters","useSearchParams","setSearchParams","onFilterClick","filterValue","filter"],"sourceRoot":""}